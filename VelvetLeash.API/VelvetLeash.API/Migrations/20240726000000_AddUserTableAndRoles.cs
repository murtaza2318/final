// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VelvetLeash.API.Data;

#nullable disable

namespace VelvetLeash.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240726000000_AddUserTableAndRoles")]
    partial class AddUserTableAndRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            // This will be filled by updating the snapshot later
        }

        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Email = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PasswordHash = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Role = table.Column<int>(type: "int", nullable: false, defaultValue: 0), // Booker by default
                    CreatedAt = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UpdatedAt = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });

            // Add foreign key from PetSitters to Users
            // First, ensure the UserId column in PetSitters is nullable if it wasn't before, or handle existing data.
            // For simplicity, assuming it can be directly altered or is new.
            // This part might need adjustment based on existing PetSitters table constraints and data.
            migrationBuilder.AddForeignKey(
                name: "FK_PetSitters_Users_UserId",
                table: "PetSitters",
                column: "UserId",
                principalTable: "Users",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade); // Or ReferentialAction.Restrict based on requirements
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_PetSitters_Users_UserId",
                table: "PetSitters");

            migrationBuilder.DropTable(
                name: "Users");
        }
    }
}
